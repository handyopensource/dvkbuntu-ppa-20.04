 #!/bin/bash
 
cat << FIN > "/etc/sysctl.conf"
# Networking
# Improving performance Increasing the size of the receive queue.
net.core.netdev_max_backlog = 100000
net.core.netdev_budget = 50000
net.core.netdev_budget_usecs = 5000

# Increase the maximum connections
net.core.somaxconn = 1024

# Increase the memory dedicated to the network interfaces
net.core.rmem_default = 1048576
net.core.rmem_max = 16777216
net.core.wmem_default = 1048576
net.core.wmem_max = 16777216
net.core.optmem_max = 65536
net.ipv4.tcp_rmem = 4096 1048576 2097152
net.ipv4.tcp_wmem = 4096 65536 16777216

# increase the default 4096 UDP limits:
net.ipv4.udp_rmem_min = 8192
net.ipv4.udp_wmem_min = 8192

# Enable TCP Fast Open
net.ipv4.tcp_fastopen = 3

# Tweak the pending connection handling
net.ipv4.tcp_max_syn_backlog = 30000

# Increase this to prevent simple DOS attacks:
net.ipv4.tcp_max_tw_buckets = 2000000

# This helps avoid from running out of available network sockets:
net.ipv4.tcp_tw_reuse = 1
net.ipv4.tcp_fin_timeout = 10
net.ipv4.tcp_slow_start_after_idle = 0

# Change TCP keepalive parameters
net.ipv4.tcp_keepalive_time = 60
net.ipv4.tcp_keepalive_intvl = 10
net.ipv4.tcp_keepalive_probes = 6

# Enable MTU probing
net.ipv4.tcp_mtu_probing = 1

# TCP Timestamps
net.ipv4.tcp_timestamps = 0

# TCP SYN cookie protection
net.ipv4.tcp_syncookies = 1

# TCP rfc1337
net.ipv4.tcp_rfc1337 = 1

# spoofing methods to do harm (default):
net.ipv4.conf.default.rp_filter = 1
net.ipv4.conf.all.rp_filter = 1

# Log martian packets
net.ipv4.conf.default.log_martians = 1
net.ipv4.conf.all.log_martians = 1

# Disable ICMP redirecting
net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0
net.ipv4.conf.all.secure_redirects = 0
net.ipv4.conf.default.secure_redirects = 0
net.ipv6.conf.all.accept_redirects = 0
net.ipv6.conf.default.accept_redirects = 0

# disable ICMP redirect sending when on a non router:
net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.default.send_redirects = 0

# Enable Ignoring to ICMP Request
# To disable ICMP echo 'ping' requests:
net.ipv4.icmp_echo_ignore_all = 1

# Virtual memory
vm.dirty_ratio = 10
vm.dirty_background_ratio = 5
vm.vfs_cache_pressure = 50

# tell the kernel to only swap if it really needs it
vm.swappiness = 1

# Set maximum and minimum speed of raid resyncing operations
dev.raid.speed_limit_max = 10000
dev.raid.speed_limit_min = 1000

# Small periodic system freezes Set dirty bytes to small enough value (for example 4M):
vm.dirty_background_bytes = 268435456
vm.dirty_bytes = 1073741824

# increase the number of allowed mmapped files
vm.max_map_count = 1048576

# increase the number of file handles available globally
fs.file-max = 1048576

# this looks nice and rarely rolls over - I've never had a problem with it.
kernel.pid_max = 999999 # unnecessary, but I like it

# seconds to delay after a kernel panic and before rebooting automatically
kernel.panic = 300

# do not enable if your machines are not physically secured
# this can be used to force reboots, kill processses, cause kernel crashes, etc without logging in
# but it's very handy when a machine is hung and you need to get control
# that said, I always enable it
kernel.sysrq = 1

# These are improved defaults for opening up the Linux network stack. I recommend Googling "Linux C10k" to learn more about what they mean.
net.ipv4.ip_local_port_range = 10000 65535
net.ipv4.tcp_window_scaling = 1
net.ipv4.tcp_rmem = 4096 87380 16777216
net.ipv4.tcp_wmem = 4096 65536 16777216
net.core.rmem_max = 16777216
net.core.wmem_max = 16777216
net.core.netdev_max_backlog = 2500
net.core.somaxconn = 65000

# increase the sysv ipc limits
kernel.shmmax = 33554432
kernel.msgmax = 33554432
kernel.msgmnb = 33554432

# https://tobert.github.io/post/2014-06-24-linux-defaults.html
# https://wiki.archlinux.org/index.php/Sysctl
FIN

cat << FIN > "/etc/security/limits.conf"
 
*           soft    core       0           # Prevent corefiles from being generated by default.
*           hard    core       unlimited   # Allow corefiles to be temporarily enabled.
*           hard    nice       -19         # Prevent non-root users from running a process at minimal niceness.
root        hard    nice       -20         # Allows root to run a process at minimal niceness to fix the system when unresponsive.
*           hard    nofile     8192        # Required for certain games to run.
*           hard    nproc      2048        # Prevent fork-bombs from taking out the system.
root        hard    nproc      65536       # Prevent root from not being able to launch enough processes
*           soft    priority   0           # Set the default priority to neutral niceness.
FIN
